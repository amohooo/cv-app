{"ast":null,"code":"var _jsxFileName = \"/Users/mohanhao/Downloads/My_CV/client/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useContent } from '../context/ContentContext';\nimport FileUpload from './FileUpload';\nimport PasswordChange from './PasswordChange';\nimport AdminManagement from './AdminManagement';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './AdminDashboard.css';\nimport '../style/quill.css';\nimport { sanitizeContent } from '../utils/sanitizeContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    pages,\n    createPage,\n    updatePage,\n    deletePage,\n    createSection,\n    updateSection,\n    deleteSection,\n    createCard,\n    updateCard,\n    deleteCard,\n    loading,\n    error: contentError\n  } = useContent();\n  const [selectedPage, setSelectedPage] = useState(null);\n  const [selectedSection, setSelectedSection] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [showPasswordChange, setShowPasswordChange] = useState(false);\n  const [showAdminManagement, setShowAdminManagement] = useState(false);\n  const [formData, setFormData] = useState({\n    title: '',\n    slug: '',\n    description: ''\n  });\n  const [sectionFormData, setSectionFormData] = useState({\n    title: '',\n    description: '',\n    order: 0\n  });\n  const [cardFormData, setCardFormData] = useState({\n    title: '',\n    content: '',\n    imageUrl: '',\n    fileUrl: '',\n    order: 0\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  // Quill configuration\n  const Quill = ReactQuill.Quill;\n  var Font = Quill.import(\"formats/font\");\n  Font.whitelist = [\"Arial\", \"Lato\", \"Verdana\", \"Helvetica\", \"Monaco\", \"Roboto\", \"SanSerif\", \"Courier\"];\n  var Size = Quill.import('attributors/style/size');\n  Size.whitelist = ['12px', '16px', '18px', '24px', '32px', '48px', '64px', '72px'];\n  Quill.register(Size, true);\n  Quill.register(Font, true);\n  const modules = {\n    toolbar: [\n    // Headers\n    [{\n      'header': [1, 2, 3, 4, 5, 6, false]\n    }], [{\n      font: Font.whitelist\n    }], [{\n      size: Size.whitelist\n    }],\n    // Text Style\n    ['bold', 'italic', 'underline', 'strike'],\n    // Lists\n    [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }],\n    // Colors\n    [{\n      'color': []\n    }], [{\n      'color': ['#0F5257']\n    }],\n    // Background Colors\n    [{\n      'background': []\n    }],\n    // Links and Media\n    ['link'],\n    // Clear Formatting\n    ['clean']],\n    clipboard: {\n      matchVisual: false\n    }\n  };\n  const formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'list', 'bullet', 'color', 'background', 'link'];\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n\n  // Page handlers\n  const handleCreatePage = async e => {\n    e.preventDefault();\n    try {\n      await createPage(formData);\n      setFormData({\n        title: '',\n        slug: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error creating page:', error);\n    }\n  };\n  const handleUpdatePage = async e => {\n    e.preventDefault();\n    try {\n      await updatePage(selectedPage.id, formData);\n      setSelectedPage(null);\n      setIsEditing(false);\n      setFormData({\n        title: '',\n        slug: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error updating page:', error);\n    }\n  };\n  const handleDeletePage = async id => {\n    if (window.confirm('Are you sure you want to delete this page?')) {\n      try {\n        await deletePage(id);\n      } catch (error) {\n        console.error('Error deleting page:', error);\n      }\n    }\n  };\n  const handleEditPage = page => {\n    setSelectedPage(page);\n    setIsEditing(true);\n    setFormData({\n      title: page.title,\n      slug: page.slug,\n      description: page.description || ''\n    });\n  };\n\n  // Section handlers\n  const handleCreateSection = async e => {\n    e.preventDefault();\n    try {\n      await createSection({\n        ...sectionFormData,\n        pageId: selectedPage.id\n      });\n      setSectionFormData({\n        title: '',\n        description: '',\n        order: 0\n      });\n    } catch (error) {\n      console.error('Error creating section:', error);\n    }\n  };\n  const handleUpdateSection = async e => {\n    e.preventDefault();\n    try {\n      await updateSection(selectedSection.id, {\n        ...sectionFormData,\n        pageId: selectedPage.id\n      });\n      setSelectedSection(null);\n      setSectionFormData({\n        title: '',\n        description: '',\n        order: 0\n      });\n    } catch (error) {\n      console.error('Error updating section:', error);\n    }\n  };\n  const handleDeleteSection = async id => {\n    if (window.confirm('Are you sure you want to delete this section?')) {\n      try {\n        await deleteSection(id, selectedPage.id);\n      } catch (error) {\n        console.error('Error deleting section:', error);\n      }\n    }\n  };\n  const handleEditSection = section => {\n    setSelectedSection(section);\n    setSectionFormData({\n      title: section.title,\n      description: section.description || '',\n      order: section.order\n    });\n\n    // Clear any selected card when switching sections\n    setSelectedCard(null);\n    setCardFormData({\n      title: '',\n      content: '',\n      imageUrl: '',\n      fileUrl: '',\n      order: 0\n    });\n  };\n\n  // Card handlers\n  const handleCreateCard = async e => {\n    e.preventDefault();\n    try {\n      await createCard({\n        ...cardFormData,\n        sectionId: selectedSection.id\n      });\n      setCardFormData({\n        title: '',\n        content: '',\n        imageUrl: '',\n        fileUrl: '',\n        order: 0\n      });\n    } catch (error) {\n      console.error('Error creating card:', error);\n    }\n  };\n  const handleUpdateCard = async e => {\n    e.preventDefault();\n    try {\n      await updateCard(selectedCard.id, {\n        ...cardFormData,\n        sectionId: selectedSection.id\n      });\n      setSelectedCard(null);\n      setCardFormData({\n        title: '',\n        content: '',\n        imageUrl: '',\n        fileUrl: '',\n        order: 0\n      });\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n  const handleDeleteCard = async id => {\n    if (window.confirm('Are you sure you want to delete this card?')) {\n      try {\n        await deleteCard(id, selectedSection.id);\n      } catch (error) {\n        console.error('Error deleting card:', error);\n      }\n    }\n  };\n  const handleEditCard = card => {\n    setSelectedCard(card);\n    setCardFormData({\n      title: card.title,\n      content: card.content || '',\n      imageUrl: card.imageUrl || '',\n      fileUrl: card.fileUrl || '',\n      order: card.order\n    });\n  };\n\n  // Update the card form section\n  const renderCardForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: selectedCard ? handleUpdateCard : handleCreateCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"card-title\",\n        value: cardFormData.title,\n        onChange: e => setCardFormData({\n          ...cardFormData,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-content\",\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: cardFormData.content,\n        onChange: content => setCardFormData({\n          ...cardFormData,\n          content\n        }),\n        modules: modules,\n        formats: formats,\n        className: \"quill-editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        existingFile: cardFormData.fileUrl,\n        onFileUpload: (fileUrl, fileDetails) => {\n          setCardFormData(prev => ({\n            ...prev,\n            fileUrl,\n            // Store original filename if provided\n            originalName: fileDetails === null || fileDetails === void 0 ? void 0 : fileDetails.originalName\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-order\",\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"card-order\",\n        value: cardFormData.order,\n        onChange: e => setCardFormData({\n          ...cardFormData,\n          order: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-button\",\n      children: selectedCard ? 'Update Card' : 'Create Card'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), selectedCard && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"cancel-button\",\n      onClick: () => {\n        setSelectedCard(null);\n        setCardFormData({\n          title: '',\n          content: '',\n          imageUrl: '',\n          fileUrl: '',\n          order: 0\n        });\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  }\n  if (contentError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: contentError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: user === null || user === void 0 ? void 0 : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `role ${user === null || user === void 0 ? void 0 : user.role}`,\n            children: user === null || user === void 0 ? void 0 : user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: [(user === null || user === void 0 ? void 0 : user.role) === 'master' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-management-button\",\n          onClick: () => setShowAdminManagement(true),\n          children: \"Manage Admins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"password-change-button\",\n          onClick: () => setShowPasswordChange(true),\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isEditing ? 'Edit Page' : 'Create New Page'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: isEditing ? handleUpdatePage : handleCreatePage,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: formData.title,\n            onChange: e => setFormData({\n              ...formData,\n              title: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"slug\",\n            children: \"Slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"slug\",\n            value: formData.slug,\n            onChange: e => setFormData({\n              ...formData,\n              slug: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            value: formData.description,\n            onChange: content => {\n              // Clean the content and ensure proper paragraph structure\n              const cleanContent = content.replace(/<p><br><\\/p>/g, '').replace(/<p>/g, '<p class=\"contact-item\">');\n              setFormData({\n                ...formData,\n                description: cleanContent\n              });\n            },\n            modules: modules,\n            formats: formats,\n            className: \"quill-editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: isEditing ? 'Update Page' : 'Create Page'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: () => {\n            setSelectedPage(null);\n            setIsEditing(false);\n            setFormData({\n              title: '',\n              slug: '',\n              description: '',\n              content: ''\n            });\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), pages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pages found. Create your first page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pages-grid\",\n        children: pages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: page.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-description\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ql-snow\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ql-editor\",\n                dangerouslySetInnerHTML: {\n                  __html: page.description\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => handleEditPage(page),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDeletePage(page.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this), (selectedPage === null || selectedPage === void 0 ? void 0 : selectedPage.id) === page.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-management\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: selectedSection ? handleUpdateSection : handleCreateSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"section-title\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"section-title\",\n                  value: sectionFormData.title,\n                  onChange: e => setSectionFormData({\n                    ...sectionFormData,\n                    title: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"section-description\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                  theme: \"snow\",\n                  id: \"section-description\",\n                  value: sectionFormData.description,\n                  onChange: content => setSectionFormData({\n                    ...sectionFormData,\n                    description: content\n                  }),\n                  modules: modules,\n                  formats: formats,\n                  className: \"quill-editor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"section-order\",\n                  children: \"Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"section-order\",\n                  value: sectionFormData.order,\n                  onChange: e => setSectionFormData({\n                    ...sectionFormData,\n                    order: parseInt(e.target.value)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"submit-button\",\n                children: selectedSection ? 'Update Section' : 'Create Section'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 23\n              }, this), selectedSection && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: () => {\n                  setSelectedSection(null);\n                  setSectionFormData({\n                    title: '',\n                    description: '',\n                    order: 0\n                  });\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sections-list\",\n              children: (page.Sections || []).sort((a, b) => a.order - b.order).map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"section-title\",\n                  children: section.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-content content-display\",\n                  dangerouslySetInnerHTML: {\n                    __html: sanitizeContent(section.description)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"action-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"edit-button\",\n                      onClick: () => handleEditSection(section),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-button\",\n                      onClick: () => handleDeleteSection(section.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 27\n                }, this), (selectedSection === null || selectedSection === void 0 ? void 0 : selectedSection.id) === section.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-management\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Cards\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 31\n                  }, this), renderCardForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cards-list\",\n                    children: section.Cards && section.Cards.length > 0 ? section.Cards.sort((a, b) => a.order - b.order).map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        children: card.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 528,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card-content content-display\",\n                        dangerouslySetInnerHTML: {\n                          __html: sanitizeContent(card.content)\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 41\n                      }, this), card.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card-image\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: card.imageUrl,\n                          alt: card.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 532,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 531,\n                        columnNumber: 43\n                      }, this), card.fileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card-file\",\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: card.fileUrl.startsWith('/api') ? card.fileUrl : card.fileUrl.startsWith('/') ? card.fileUrl : `/${card.fileUrl}`,\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          download: card.originalName || card.fileUrl.split('/').pop(),\n                          children: card.originalName || 'Download File'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 43\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card-actions\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"edit-button\",\n                          onClick: () => handleEditCard(card),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 548,\n                          columnNumber: 43\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"delete-button\",\n                          onClick: () => handleDeleteCard(card.id),\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 43\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 41\n                      }, this)]\n                    }, card.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 39\n                    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No cards found. Create a new card above.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 29\n                }, this)]\n              }, section.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 19\n          }, this)]\n        }, page.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), showPasswordChange && /*#__PURE__*/_jsxDEV(PasswordChange, {\n      onClose: () => setShowPasswordChange(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 9\n    }, this), showAdminManagement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-management-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-management-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Admin Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setShowAdminManagement(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AdminManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"pVIh5qrZZyghOC3KvOiyk+vIios=\", false, function () {\n  return [useAuth, useContent, useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","useContent","FileUpload","PasswordChange","AdminManagement","ReactQuill","sanitizeContent","jsxDEV","_jsxDEV","AdminDashboard","_s","user","pages","createPage","updatePage","deletePage","createSection","updateSection","deleteSection","createCard","updateCard","deleteCard","loading","error","contentError","selectedPage","setSelectedPage","selectedSection","setSelectedSection","selectedCard","setSelectedCard","isEditing","setIsEditing","showPasswordChange","setShowPasswordChange","showAdminManagement","setShowAdminManagement","formData","setFormData","title","slug","description","sectionFormData","setSectionFormData","order","cardFormData","setCardFormData","content","imageUrl","fileUrl","setError","success","setSuccess","navigate","Quill","Font","import","whitelist","Size","register","modules","toolbar","font","size","clipboard","matchVisual","formats","handleCreatePage","e","preventDefault","console","handleUpdatePage","id","handleDeletePage","window","confirm","handleEditPage","page","handleCreateSection","pageId","handleUpdateSection","handleDeleteSection","handleEditSection","section","handleCreateCard","sectionId","handleUpdateCard","handleDeleteCard","handleEditCard","card","renderCardForm","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","theme","existingFile","onFileUpload","fileDetails","prev","originalName","parseInt","onClick","username","role","cleanContent","replace","length","map","dangerouslySetInnerHTML","__html","Sections","sort","a","b","Cards","src","alt","href","startsWith","rel","download","split","pop","onClose","_c","$RefreshReg$"],"sources":["/Users/mohanhao/Downloads/My_CV/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useContent } from '../context/ContentContext';\nimport FileUpload from './FileUpload';\nimport PasswordChange from './PasswordChange';\nimport AdminManagement from './AdminManagement';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './AdminDashboard.css';\nimport '../style/quill.css';\nimport { sanitizeContent } from '../utils/sanitizeContent';\n\nconst AdminDashboard = () => {\n  const { user } = useAuth();\n  const { \n    pages, \n    createPage, \n    updatePage, \n    deletePage,\n    createSection,\n    updateSection,\n    deleteSection,\n    createCard,\n    updateCard,\n    deleteCard,\n    loading, \n    error: contentError \n  } = useContent();\n  \n  const [selectedPage, setSelectedPage] = useState(null);\n  const [selectedSection, setSelectedSection] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [showPasswordChange, setShowPasswordChange] = useState(false);\n  const [showAdminManagement, setShowAdminManagement] = useState(false);\n  const [formData, setFormData] = useState({\n    title: '',\n    slug: '',\n    description: ''\n  });\n  const [sectionFormData, setSectionFormData] = useState({\n    title: '',\n    description: '',\n    order: 0\n  });\n  const [cardFormData, setCardFormData] = useState({\n    title: '',\n    content: '',\n    imageUrl: '',\n    fileUrl: '',\n    order: 0\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  // Quill configuration\n  const Quill = ReactQuill.Quill;\n  var Font = Quill.import(\"formats/font\");\n  Font.whitelist = [\"Arial\", \"Lato\", \"Verdana\", \"Helvetica\", \"Monaco\", \"Roboto\", \"SanSerif\", \"Courier\"];\n  var Size = Quill.import('attributors/style/size');\n  Size.whitelist = ['12px', '16px', '18px', '24px', '32px', '48px', '64px', '72px'];\n  Quill.register(Size, true);\n  Quill.register(Font, true);\n\n  const modules = {\n    toolbar: [\n      // Headers\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n      [{ font: Font.whitelist }],\n      [{ size: Size.whitelist }],\n      // Text Style\n      ['bold', 'italic', 'underline', 'strike'],\n      // Lists\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      // Colors\n      [{ 'color': [] }],\n      [{ 'color': ['#0F5257'] }],\n      // Background Colors\n      [{ 'background': [] }],\n      // Links and Media\n      ['link'],\n      // Clear Formatting\n      ['clean']\n    ],\n    clipboard: {\n      matchVisual: false\n    }\n  };\n\n  const formats = [\n    'header', 'font', 'size', 'bold', 'italic', 'underline', 'strike',\n    'list', 'bullet',\n    'color', 'background',\n    'link'\n  ];\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n\n  // Page handlers\n  const handleCreatePage = async (e) => {\n    e.preventDefault();\n    try {\n      await createPage(formData);\n      setFormData({ title: '', slug: '', description: ''});\n    } catch (error) {\n      console.error('Error creating page:', error);\n    }\n  };\n\n  const handleUpdatePage = async (e) => {\n    e.preventDefault();\n    try {\n      await updatePage(selectedPage.id, formData);\n      setSelectedPage(null);\n      setIsEditing(false);\n      setFormData({ title: '', slug: '', description: ''});\n    } catch (error) {\n      console.error('Error updating page:', error);\n    }\n  };\n\n  const handleDeletePage = async (id) => {\n    if (window.confirm('Are you sure you want to delete this page?')) {\n      try {\n        await deletePage(id);\n      } catch (error) {\n        console.error('Error deleting page:', error);\n      }\n    }\n  };\n\n  const handleEditPage = (page) => {\n    setSelectedPage(page);\n    setIsEditing(true);\n    setFormData({\n      title: page.title,\n      slug: page.slug,\n      description: page.description || ''\n    });\n  };\n\n  // Section handlers\n  const handleCreateSection = async (e) => {\n    e.preventDefault();\n    try {\n      await createSection({\n        ...sectionFormData,\n        pageId: selectedPage.id\n      });\n      setSectionFormData({ title: '', description: '', order: 0 });\n    } catch (error) {\n      console.error('Error creating section:', error);\n    }\n  };\n\n  const handleUpdateSection = async (e) => {\n    e.preventDefault();\n    try {\n      await updateSection(selectedSection.id, {\n        ...sectionFormData,\n        pageId: selectedPage.id\n      });\n      setSelectedSection(null);\n      setSectionFormData({ title: '', description: '', order: 0 });\n    } catch (error) {\n      console.error('Error updating section:', error);\n    }\n  };\n\n  const handleDeleteSection = async (id) => {\n    if (window.confirm('Are you sure you want to delete this section?')) {\n      try {\n        await deleteSection(id, selectedPage.id);\n      } catch (error) {\n        console.error('Error deleting section:', error);\n      }\n    }\n  };\n\n  const handleEditSection = (section) => {\n    setSelectedSection(section);\n    setSectionFormData({\n      title: section.title,\n      description: section.description || '',\n      order: section.order\n    });\n    \n    // Clear any selected card when switching sections\n    setSelectedCard(null);\n    setCardFormData({ title: '', content: '', imageUrl: '', fileUrl: '', order: 0 });\n  };\n\n  // Card handlers\n  const handleCreateCard = async (e) => {\n    e.preventDefault();\n    try {\n      await createCard({\n        ...cardFormData,\n        sectionId: selectedSection.id\n      });\n      setCardFormData({ title: '', content: '', imageUrl: '', fileUrl: '', order: 0 });\n    } catch (error) {\n      console.error('Error creating card:', error);\n    }\n  };\n\n  const handleUpdateCard = async (e) => {\n    e.preventDefault();\n    try {\n      await updateCard(selectedCard.id, {\n        ...cardFormData,\n        sectionId: selectedSection.id\n      });\n      setSelectedCard(null);\n      setCardFormData({ title: '', content: '', imageUrl: '', fileUrl: '', order: 0 });\n    } catch (error) {\n      console.error('Error updating card:', error);\n    }\n  };\n\n  const handleDeleteCard = async (id) => {\n    if (window.confirm('Are you sure you want to delete this card?')) {\n      try {\n        await deleteCard(id, selectedSection.id);\n      } catch (error) {\n        console.error('Error deleting card:', error);\n      }\n    }\n  };\n\n  const handleEditCard = (card) => {\n    setSelectedCard(card);\n    setCardFormData({\n      title: card.title,\n      content: card.content || '',\n      imageUrl: card.imageUrl || '',\n      fileUrl: card.fileUrl || '',\n      order: card.order\n    });\n  };\n\n  // Update the card form section\n  const renderCardForm = () => (\n    <form onSubmit={selectedCard ? handleUpdateCard : handleCreateCard}>\n      <div className=\"form-group\">\n        <label htmlFor=\"card-title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"card-title\"\n          value={cardFormData.title}\n          onChange={(e) => setCardFormData({ ...cardFormData, title: e.target.value })}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"card-content\">Content</label>\n        <ReactQuill\n          theme=\"snow\"\n          value={cardFormData.content}\n          onChange={(content) => setCardFormData({ ...cardFormData, content })}\n          modules={modules}\n          formats={formats}\n          className=\"quill-editor\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>File Upload</label>\n        <FileUpload\n          existingFile={cardFormData.fileUrl}\n          onFileUpload={(fileUrl, fileDetails) => {\n            setCardFormData(prev => ({\n              ...prev,\n              fileUrl,\n              // Store original filename if provided\n              originalName: fileDetails?.originalName\n            }));\n          }}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"card-order\">Order</label>\n        <input\n          type=\"number\"\n          id=\"card-order\"\n          value={cardFormData.order}\n          onChange={(e) => setCardFormData({ ...cardFormData, order: parseInt(e.target.value) })}\n        />\n      </div>\n      <button type=\"submit\" className=\"submit-button\">\n        {selectedCard ? 'Update Card' : 'Create Card'}\n      </button>\n      {selectedCard && (\n        <button\n          type=\"button\"\n          className=\"cancel-button\"\n          onClick={() => {\n            setSelectedCard(null);\n            setCardFormData({ title: '', content: '', imageUrl: '', fileUrl: '', order: 0 });\n          }}\n        >\n          Cancel\n        </button>\n      )}\n    </form>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n      </div>\n    );\n  }\n\n  if (contentError) {\n    return (\n      <div className=\"error-container\">\n        <div className=\"error-message\">{contentError}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"admin-dashboard\">\n      <div className=\"dashboard-header\">\n        <div className=\"dashboard-title\">\n          <h1>Admin Dashboard</h1>\n          <div className=\"user-info\">\n            <span className=\"username\">{user?.username}</span>\n            <span className={`role ${user?.role}`}>{user?.role}</span>\n          </div>\n        </div>\n        <div className=\"dashboard-actions\">\n          {user?.role === 'master' && (\n            <button\n              className=\"admin-management-button\"\n              onClick={() => setShowAdminManagement(true)}\n            >\n              Manage Admins\n            </button>\n          )}\n          <button\n            className=\"password-change-button\"\n            onClick={() => setShowPasswordChange(true)}\n          >\n            Change Password\n          </button>\n        </div>\n      </div>\n      \n      {/* Page Management */}\n      <div className=\"page-form\">\n        <h2>{isEditing ? 'Edit Page' : 'Create New Page'}</h2>\n        <form onSubmit={isEditing ? handleUpdatePage : handleCreatePage}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"slug\">Slug</label>\n            <input\n              type=\"text\"\n              id=\"slug\"\n              value={formData.slug}\n              onChange={(e) => setFormData({ ...formData, slug: e.target.value })}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <ReactQuill\n              theme=\"snow\"\n              value={formData.description}\n              onChange={(content) => {\n                // Clean the content and ensure proper paragraph structure\n                const cleanContent = content\n                  .replace(/<p><br><\\/p>/g, '')\n                  .replace(/<p>/g, '<p class=\"contact-item\">');\n                setFormData({ ...formData, description: cleanContent });\n              }}\n              modules={modules}\n              formats={formats}\n              className=\"quill-editor\"\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-button\">\n            {isEditing ? 'Update Page' : 'Create Page'}\n          </button>\n          {isEditing && (\n            <button\n              type=\"button\"\n              className=\"cancel-button\"\n              onClick={() => {\n                setSelectedPage(null);\n                setIsEditing(false);\n                setFormData({ title: '', slug: '', description: '', content: '' });\n              }}\n            >\n              Cancel\n            </button>\n          )}\n        </form>\n      </div>\n\n      {/* Pages List */}\n      <div className=\"pages-list\">\n        <h2>Pages</h2>\n        {pages.length === 0 ? (\n          <p>No pages found. Create your first page!</p>\n        ) : (\n          <div className=\"pages-grid\">\n            {pages.map((page) => (\n              <div key={page.id} className=\"page-card\">\n                <h3>{page.title}</h3>\n                <div className=\"page-description\">\n                  <div className=\"ql-snow\">\n                    <div \n                      className=\"ql-editor\" \n                      dangerouslySetInnerHTML={{ __html: page.description }} \n                    />\n                  </div>\n                </div>\n                <div className=\"page-actions\">\n                  <button\n                    className=\"edit-button\"\n                    onClick={() => handleEditPage(page)}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"delete-button\"\n                    onClick={() => handleDeletePage(page.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n\n                {/* Section Management for Selected Page */}\n                {selectedPage?.id === page.id && (\n                  <div className=\"section-management\">\n                    <h4>Sections</h4>\n                    <form onSubmit={selectedSection ? handleUpdateSection : handleCreateSection}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"section-title\">Title</label>\n                        <input\n                          type=\"text\"\n                          id=\"section-title\"\n                          value={sectionFormData.title}\n                          onChange={(e) => setSectionFormData({ ...sectionFormData, title: e.target.value })}\n                          required\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"section-description\">Description</label>\n                        <ReactQuill\n                          theme=\"snow\"\n                          id=\"section-description\"\n                          value={sectionFormData.description}\n                          onChange={(content) => setSectionFormData({ ...sectionFormData, description: content })}\n                          modules={modules}\n                          formats={formats}\n                          className=\"quill-editor\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"section-order\">Order</label>\n                        <input\n                          type=\"number\"\n                          id=\"section-order\"\n                          value={sectionFormData.order}\n                          onChange={(e) => setSectionFormData({ ...sectionFormData, order: parseInt(e.target.value) })}\n                        />\n                      </div>\n                      <button type=\"submit\" className=\"submit-button\">\n                        {selectedSection ? 'Update Section' : 'Create Section'}\n                      </button>\n                      {selectedSection && (\n                        <button\n                          type=\"button\"\n                          className=\"cancel-button\"\n                          onClick={() => {\n                            setSelectedSection(null);\n                            setSectionFormData({ title: '', description: '', order: 0 });\n                          }}\n                        >\n                          Cancel\n                        </button>\n                      )}\n                    </form>\n\n                    {/* Sections List */}\n                    <div className=\"sections-list\">\n                      {(page.Sections || [])\n                        .sort((a, b) => a.order - b.order)\n                        .map((section) => (\n                        <div key={section.id} className=\"section-card\">\n                          <h4 className=\"section-title\">{section.title}</h4>\n                          <div className=\"section-content content-display\" dangerouslySetInnerHTML={{ __html: sanitizeContent(section.description) }} />\n                          <div className=\"section-actions\">\n                            <div className=\"action-buttons\">\n                              <button className=\"edit-button\" onClick={() => handleEditSection(section)}>Edit</button>\n                              <button className=\"delete-button\" onClick={() => handleDeleteSection(section.id)}>Delete</button>\n                            </div>\n                          </div>\n                          \n                          {selectedSection?.id === section.id && (\n                            <div className=\"card-management\">\n                              <h6>Cards</h6>\n                              {renderCardForm()}\n                              <div className=\"cards-list\">\n                                {section.Cards && section.Cards.length > 0 ? (\n                                  section.Cards\n                                    .sort((a, b) => a.order - b.order)\n                                    .map((card) => (\n                                      <div key={card.id} className=\"card-item\">\n                                        <h6>{card.title}</h6>\n                                        <div className=\"card-content content-display\" dangerouslySetInnerHTML={{ __html: sanitizeContent(card.content) }} />\n                                        {card.imageUrl && (\n                                          <div className=\"card-image\">\n                                            <img src={card.imageUrl} alt={card.title} />\n                                          </div>\n                                        )}\n                                        {card.fileUrl && (\n                                          <div className=\"card-file\">\n                                            <a \n                                              href={card.fileUrl.startsWith('/api') ? card.fileUrl : card.fileUrl.startsWith('/') ? card.fileUrl : `/${card.fileUrl}`}\n                                              target=\"_blank\" \n                                              rel=\"noopener noreferrer\"\n                                              download={card.originalName || card.fileUrl.split('/').pop()}\n                                            >\n                                              {card.originalName || 'Download File'}\n                                            </a>\n                                          </div>\n                                        )}\n                                        <div className=\"card-actions\">\n                                          <button\n                                            className=\"edit-button\"\n                                            onClick={() => handleEditCard(card)}\n                                          >\n                                            Edit\n                                          </button>\n                                          <button\n                                            className=\"delete-button\"\n                                            onClick={() => handleDeleteCard(card.id)}\n                                          >\n                                            Delete\n                                          </button>\n                                        </div>\n                                      </div>\n                                    ))\n                                ) : (\n                                  <p>No cards found. Create a new card above.</p>\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Password Change Modal */}\n      {showPasswordChange && (\n        <PasswordChange onClose={() => setShowPasswordChange(false)} />\n      )}\n\n      {/* Admin Management Modal */}\n      {showAdminManagement && (\n        <div className=\"admin-management-modal\">\n          <div className=\"admin-management-content\">\n            <div className=\"modal-header\">\n              <h2>Admin Management</h2>\n              <button \n                className=\"close-button\" \n                onClick={() => setShowAdminManagement(false)}\n              >\n                ×\n              </button>\n            </div>\n            <AdminManagement />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}